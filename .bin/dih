#!/bin/bash

backends_path=$(dirname $(cd $(dirname "$0") && pwd))/backends
cronies_path=$(dirname $(cd $(dirname "$0") && pwd))/cronies

function unindent(){
    sed -r 's/^\s{4}//'
}
function clear(){
    docker container ls -aq | xargs docker stop 2>/dev/null| xargs docker rm 2>/dev/null
    for it in {volume,network}; do 
        docker $it ls  -q | xargs docker $it rm 2>/dev/null ; done
}

generate_compose_file(){
    file="$1"
    cron_env=$(dirname $(cd $(dirname "$0") && pwd))/cronies/.env
    base=$(dirname $(cd $(dirname "$0") && pwd))/backends/dhis
    proj=$(basename "$file"| grep -Po '^[^.]+')
    env_file="$base/compose/$proj.env"
    compose="$base/$proj-compose.yml"
    cp $base/compose/compose-template.yml $compose

    unindent <<- CODE | python
    import json
    with open('$file') as file, open('$env_file','w') as back_env, open('$cron_env','w') as cron_env:
        obj=json.load(file)
        conf=obj['backends']['dhis']
        for key, value in conf.items():
            back_env.write(f'{key.strip()}={value.strip()}\n')
        back_env.write('proj=$proj\n')
        back_env.write('env_file=$env_file\n')
        back_env.write(f'dih_user={obj["dih_user"]}\n')
        cron_env.write(f'dih_user={obj["dih_user"]}\n')

    with open('$compose','r+') as compose_file:
        comp=compose_file.read()
        compose_file.seek(0)
        for key, value in conf.items():
            comp=comp.replace(f'\${{{key}}}',value)
        comp=comp.replace('\${proj}','$proj')
        comp=comp.replace('\${env_file}','$env_file')
        compose_file.write(comp)
CODE
    sed -ri '/^\W*\$\{\w+\}\W*:\W*\/data.*/d' $compose   #remove empty data backups volumes
}

function generate_compose_file_py(){
    env_file=$1
    proj=$(basename "$env_file"| grep -Po '^[^.]+')
    base=$(dirname "$env_file")
    compose_file="$(dirname $base)/$proj-compose.yml"
    cp $base/compose-template.yml $compose_file 

}

function create_shared_docker_resources(){
    docker network create --subnet=172.10.16.0/24  dih-network  2>/dev/null
    docker volume create  dih-common 2>/dev/null
}

case $1 in
    clear) clear ;;
    common) create_shared_docker_resources ;;
    *.json)  create_shared_docker_resources && generate_compose_file $1 ;;
    *.yml) create_shared_docker_resources; docker-compose -f $1 up -d ;; 
    logs) docker-compose -f $2 logs -f & ;; 
    run) docker exec -u \
        $(grep -Po 'dih_user=\K\w+' $cronies_path/.env) \
        -it dih-cronies run $2 $3;;
    down) docker-compose -f $2 down ;;
    stop)  docker ps  | grep "$2" | awk '{print $1}' | xargs docker stop ;; 
    rm)  docker container ls -a  | grep "$2" | awk '{print $1}' | xargs docker stop |xargs docker rm;; 
esac




